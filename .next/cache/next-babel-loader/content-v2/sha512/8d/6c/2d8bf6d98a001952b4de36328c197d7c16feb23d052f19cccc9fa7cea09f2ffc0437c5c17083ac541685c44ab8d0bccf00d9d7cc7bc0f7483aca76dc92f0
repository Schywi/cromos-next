{"ast":null,"code":"import _toConsumableArray from \"/home/lucas/home/lucas/www/udemy/my-projects/cromos-chat/cromos-next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/lucas/home/lucas/www/udemy/my-projects/cromos-chat/cromos-next/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _defineProperty from \"/home/lucas/home/lucas/www/udemy/my-projects/cromos-chat/cromos-next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar ActionProvider = function ActionProvider(createChatBotMessage, setStateFunc) {\n  var _this = this;\n\n  _classCallCheck(this, ActionProvider);\n\n  _defineProperty(this, \"greet\", function () {\n    var message = _this.createChatBotMessage(\"Hello friend.\");\n\n    _this.addMessageToState(message);\n  });\n\n  _defineProperty(this, \"tooling\", function () {\n    var message = _this.createChatBotMessage(\"Excelente, qual tipo de serviço você deseja ?\", {\n      widget: \"options2\"\n    });\n\n    _this.addMessageToState(message);\n  });\n\n  _defineProperty(this, \"machining\", function () {\n    var message = _this.createChatBotMessage(\"Excelente, qual tipo de serviço você deseja ?\", {\n      widget: \"options3\"\n    });\n\n    _this.addMessageToState(message);\n  });\n\n  _defineProperty(this, \"hidraulyc\", function () {\n    var message = _this.createChatBotMessage(\"Excelente, qual tipo de serviço você deseja ?\", {\n      widget: \"options4\"\n    });\n\n    _this.addMessageToState(message);\n  });\n\n  _defineProperty(this, \"contact\", function () {\n    var message = _this.createChatBotMessage(\"Certo, entrarei em contato com a equipe,  mas antes, por favor preencha o formulario de contato\");\n\n    _this.addMessageToState(message);\n  });\n\n  _defineProperty(this, \"handleJavascriptQuiz\", function () {\n    var message = _this.createChatBotMessage(\"Excelente, qual tipo de serviço você deseja ?\", {\n      widget: \"options2\"\n    });\n\n    _this.addMessageToState(message);\n  });\n\n  _defineProperty(this, \"addMessageToState\", function (message) {\n    _this.setState(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        messages: [].concat(_toConsumableArray(prevState.messages), [message])\n      });\n    });\n  });\n\n  this.createChatBotMessage = createChatBotMessage;\n  this.setState = setStateFunc;\n} // functions that executes when user type\n;\n\nexport default ActionProvider;","map":{"version":3,"sources":["/home/lucas/home/lucas/www/udemy/my-projects/cromos-chat/cromos-next/components/chatbot/ActionProvider.js"],"names":["ActionProvider","createChatBotMessage","setStateFunc","message","addMessageToState","widget","setState","prevState","messages"],"mappings":";;;;;;;;IAAMA,c,GACJ,wBAAYC,oBAAZ,EAAkCC,YAAlC,EAAgD;AAAA;;AAAA;;AAAA,iCAOxC,YAAM;AACZ,QAAMC,OAAO,GAAG,KAAI,CAACF,oBAAL,CAA0B,eAA1B,CAAhB;;AACA,IAAA,KAAI,CAACG,iBAAL,CAAuBD,OAAvB;AACD,GAV+C;;AAAA,mCAatC,YAAM;AACd,QAAMA,OAAO,GAAG,KAAI,CAACF,oBAAL,CACd,+CADc,EAEd;AACEI,MAAAA,MAAM,EAAE;AADV,KAFc,CAAhB;;AAMA,IAAA,KAAI,CAACD,iBAAL,CAAuBD,OAAvB;AACD,GArB+C;;AAAA,qCAuBlC,YAAM;AAChB,QAAMA,OAAO,GAAG,KAAI,CAACF,oBAAL,CACd,+CADc,EAEd;AACEI,MAAAA,MAAM,EAAE;AADV,KAFc,CAAhB;;AAMA,IAAA,KAAI,CAACD,iBAAL,CAAuBD,OAAvB;AACD,GA/B6C;;AAAA,qCAiChC,YAAM;AAChB,QAAMA,OAAO,GAAG,KAAI,CAACF,oBAAL,CACd,+CADc,EAEd;AACEI,MAAAA,MAAM,EAAE;AADV,KAFc,CAAhB;;AAMA,IAAA,KAAI,CAACD,iBAAL,CAAuBD,OAAvB;AACD,GAzC2C;;AAAA,mCA2ClC,YAAM;AACd,QAAMA,OAAO,GAAG,KAAI,CAACF,oBAAL,CACd,iGADc,CAAhB;;AAIA,IAAA,KAAI,CAACG,iBAAL,CAAuBD,OAAvB;AACD,GAjD2C;;AAAA,gDAwDzB,YAAM;AAC3B,QAAMA,OAAO,GAAG,KAAI,CAACF,oBAAL,CACd,+CADc,EAEd;AACEI,MAAAA,MAAM,EAAE;AADV,KAFc,CAAhB;;AAQA,IAAA,KAAI,CAACD,iBAAL,CAAuBD,OAAvB;AACD,GAlE+C;;AAAA,6CAoE5B,UAACA,OAAD,EAAa;AAC/B,IAAA,KAAI,CAACG,QAAL,CAAc,UAACC,SAAD;AAAA,6CACTA,SADS;AAEZC,QAAAA,QAAQ,+BAAMD,SAAS,CAACC,QAAhB,IAA0BL,OAA1B;AAFI;AAAA,KAAd;AAID,GAzE+C;;AAC9C,OAAKF,oBAAL,GAA4BA,oBAA5B;AACA,OAAKK,QAAL,GAAgBJ,YAAhB;AACD,C,CAGD;;;AAsEF,eAAeF,cAAf","sourcesContent":["class ActionProvider {\n  constructor(createChatBotMessage, setStateFunc) {\n    this.createChatBotMessage = createChatBotMessage;\n    this.setState = setStateFunc;\n  }\n\n\n  // functions that executes when user type\n  greet = () => {\n    const message = this.createChatBotMessage(\"Hello friend.\");\n    this.addMessageToState(message);\n  };\n\n\n  tooling = () => {\n    const message = this.createChatBotMessage(\n      \"Excelente, qual tipo de serviço você deseja ?\",\n      {\n        widget: \"options2\",\n      }\n    );\n    this.addMessageToState(message);\n  } ;\n\n    machining = () => {\n      const message = this.createChatBotMessage(\n        \"Excelente, qual tipo de serviço você deseja ?\",\n        {\n          widget: \"options3\",\n        }\n      );   \n      this.addMessageToState(message);\n    } ;\n\n      hidraulyc = () => {\n        const message = this.createChatBotMessage(\n          \"Excelente, qual tipo de serviço você deseja ?\",\n          {\n            widget: \"options4\",\n          }\n        );\n        this.addMessageToState(message);\n      };\n\n      contact = () => {\n        const message = this.createChatBotMessage(\n          \"Certo, entrarei em contato com a equipe,  mas antes, por favor preencha o formulario de contato\",\n\n        );\n        this.addMessageToState(message);\n      };\n    \n\n  \n\n\n\n  handleJavascriptQuiz = () => {\n    const message = this.createChatBotMessage(\n      \"Excelente, qual tipo de serviço você deseja ?\",\n      {\n        widget: \"options2\",\n      }\n    );\n    \n\n    this.addMessageToState(message);\n  };\n\n  addMessageToState = (message) => {\n    this.setState((prevState) => ({\n      ...prevState,\n      messages: [...prevState.messages, message],\n    }));\n  };\n}\n\nexport default ActionProvider;\n"]},"metadata":{},"sourceType":"module"}