{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/home/lucas/home/lucas/www/udemy/my-projects/cromos-chat/cromos-next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/lucas/home/lucas/www/udemy/my-projects/cromos-chat/cromos-next/pages/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from '../components/App';\nimport { setContext } from '@apollo/client/link/context';\nimport { AUTH_TOKEN } from '../constants';\nimport { ApolloProvider, ApolloClient, createHttpLink, InMemoryCache } from '@apollo/client';\nvar httpLink = createHttpLink({\n  uri: 'http://localhost:4001'\n});\nvar authLink = setContext(function (_, _ref) {\n  var headers = _ref.headers;\n  var token = true;\n  return {\n    headers: _objectSpread(_objectSpread({}, headers), {}, {\n      authorization: token ? \"Bearer \".concat(token) : ''\n    })\n  };\n});\nvar client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\nReactDOM.render( /*#__PURE__*/_jsxDEV(ApolloProvider, {\n  client: client,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 17\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 48,\n  columnNumber: 14\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals","map":{"version":3,"sources":["/home/lucas/home/lucas/www/udemy/my-projects/cromos-chat/cromos-next/pages/index.js"],"names":["React","ReactDOM","App","setContext","AUTH_TOKEN","ApolloProvider","ApolloClient","createHttpLink","InMemoryCache","httpLink","uri","authLink","_","headers","token","authorization","client","link","concat","cache","render","document","getElementById"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAOC,GAAP,MAAgB,mBAAhB;AAGA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SAASC,UAAT,QAA2B,cAA3B;AAGA,SACEC,cADF,EAEEC,YAFF,EAGEC,cAHF,EAIEC,aAJF,QAKO,gBALP;AAWA,IAAMC,QAAQ,GAAGF,cAAc,CAAC;AAC9BG,EAAAA,GAAG,EAAE;AADyB,CAAD,CAA/B;AAKA,IAAMC,QAAQ,GAAGR,UAAU,CAAC,UAACS,CAAD,QAAoB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AAC9C,MAAMC,KAAK,GAAG,IAAd;AACA,SAAO;AACLD,IAAAA,OAAO,kCACFA,OADE;AAELE,MAAAA,aAAa,EAAED,KAAK,oBAAaA,KAAb,IAAuB;AAFtC;AADF,GAAP;AAMD,CAR0B,CAA3B;AAWA,IAAME,MAAM,GAAG,IAAIV,YAAJ,CAAiB;AAC9BW,EAAAA,IAAI,EAAEN,QAAQ,CAACO,MAAT,CAAgBT,QAAhB,CADwB;AAE9BU,EAAAA,KAAK,EAAE,IAAIX,aAAJ;AAFuB,CAAjB,CAAf;AAOAP,QAAQ,CAACmB,MAAT,eAGa,QAAC,cAAD;AAAgB,EAAA,MAAM,EAAEJ,MAAxB;AAAA,yBACG,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,QAHb,EAMEK,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF,E,CASA;AACA;AACA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n \nimport App from '../components/App';\n \n\nimport { setContext } from '@apollo/client/link/context';\nimport { AUTH_TOKEN } from '../constants';\n \n\nimport {\n  ApolloProvider,\n  ApolloClient,\n  createHttpLink,\n  InMemoryCache\n} from '@apollo/client';\n\n\n\n\n\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:4001'\n});\n\n\nconst authLink = setContext((_, { headers }) => {\n  const token = true;\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : ''\n    }\n  };\n});\n\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\n\n\n\nReactDOM.render(\n\n\n             <ApolloProvider client={client}>\n                <App/>\n              </ApolloProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n \n"]},"metadata":{},"sourceType":"module"}